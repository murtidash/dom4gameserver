node piece that resides on server that has backend only providing restful services

creategame - handled by post to /games
updategame - handled by put to /games

startgame - need to figure out proper start command
validateSettings - check that port is open and map/mods exist and other shit?
*stopgame - done
*restartgame - done

*uploadmap - done
*uploadmods - done
will need to make sure docker container gets storage directory from the host filesystem
needs to check repo out

need to add logic for validating game, then have front end run validate prior to restart
set admin piece to only show a specific game so that pw can be entered
have it so that if you go to a gameid that doesn't exist it defaults to create a new game so that link into app doesn't need to change


*need data blob that contains
	could also just deal with it as a single options line
	name (id)
	pid
	port
	era
	masterpw
	event rarity
	magicsites
	hours
	thrones
	story mode
	statfile public/private
	scoredump public/private

ps -ef | grep blitz1 | grep dom4_amd64


-----
07:22 <brainwrinkle> brainstorming the least possible effort here:
07:22 <murtidash> but i guess that's technically the same thing, but with the "password" being dynamically generated by ggs
07:23 <brainwrinkle> URL on the GGS game page to your angular page where the server host has a password
07:23 <brainwrinkle> to manage all the automation stuff
07:23 <murtidash> GGS can show or not show that link based on if you are game owner
07:24 <murtidash> and if the server you're using has automation enabled (check box on ggs)
07:24 <brainwrinkle> yep
